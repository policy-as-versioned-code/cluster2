name: CI

on:
  push:
  pull_request:

jobs:
  deploy:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - uses: container-tools/kind-action@fdfd7e7ffb39e532f9de844dba8f1a29ae7e0f75 # renovate: tag=v1.7.0
          
      - name: Install kyverno
        run: |
          kubectl apply --wait -k github.com/kyverno/kyverno/config

      - name: Wait for kyverno to be installed
        run: |
          sleep 5
          kubectl wait --for=condition=available --timeout=600s -n kyverno deployment/kyverno

      - name: Apply Policy
        run: |
          kubectl apply -k "github.com/policy-as-versioned-code/policy/kubernetes/kyverno?ref=2.0.0"
          kubectl apply -k "github.com/policy-as-versioned-code/policy/kubernetes/kyverno?ref=2.1.0"
          kubectl apply -k "github.com/policy-as-versioned-code/policy/kubernetes/kyverno?ref=2.1.1"

      - name: Wait for policy to be available
        run: |
          while [[ $(kubectl get -k "github.com/policy-as-versioned-code/policy/kubernetes/kyverno?ref=2.0.0" -o 'jsonpath={..status.ready}') != "true true" ]]; do sleep 1; done
          while [[ $(kubectl get -k "github.com/policy-as-versioned-code/policy/kubernetes/kyverno?ref=2.1.0" -o 'jsonpath={..status.ready}') != "true true" ]]; do sleep 1; done
          while [[ $(kubectl get -k "github.com/policy-as-versioned-code/policy/kubernetes/kyverno?ref=2.1.1" -o 'jsonpath={..status.ready}') != "true true" ]]; do sleep 1; done

      - name: Deploy apps
        run: |
          kubectl apply -k github.com/policy-as-versioned-code/app2
          kubectl apply -k github.com/policy-as-versioned-code/app3

      - name: Check all apps are deployed
        run: |
          kubectl wait --for=condition=available --timeout=600s \
            deployment/app2 \
            deployment/app3